# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# Name of this GitHub Actions workflow.
name: Semgrep

on:
  # Scan mainline branches and report all findings:
  push:
    branches: ["main"]
    # Scan changed files in PRs (diff-aware scanning):
  pull_request:
    # The branches below must be a subset of the branches above
    branches: ["main"]
  # Schedule the CI job (this method uses cron syntax):
  schedule:
    - cron: '0 0 * * 6'

jobs:
  semgrep:
    # User-definable name of this GitHub Actions job:
    name: Scan

    # If you are self-hosting, change the following `runs-on` value: 
    runs-on: ubuntu-latest

    container:
      # A Docker image with Semgrep installed. Do not change this.
      image: returntocorp/semgrep

    # To skip any PR created by dependabot to avoid permission issues:
    if: (github.actor != 'dependabot[bot]')

    outputs:
      semgrep: ${{ steps.semgrep.outputs.sarifFile }}

    steps:
      # Fetch project source with GitHub Actions Checkout.
      - uses: actions/checkout@v3
      # Run the "semgrep ci" command on the command line of the docker image.
      - run: semgrep ci --sarif > $GITHUB_OUTPUT
        env:
           # Add the rules that Semgrep uses by setting the SEMGREP_RULES environment variable. 
           SEMGREP_RULES: p/default p/javascript p/react # more at semgrep.dev/explore
           # Uncomment SEMGREP_TIMEOUT to set this job's timeout (in seconds):
           # Default timeout is 1800 seconds (30 minutes).
           # Set to 0 to disable the timeout.
           # SEMGREP_TIMEOUT: 300
     
      # Upload results to the Security tab
      - name: Upload OSSAR results
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: ${{ steps.semgrep.outputs.sarifFile }}
